const axios = require("axios");
const { ton } = require("./config");

// ‚úÖ Verificar transacci√≥n en TonCenter
async function verifyTONTransaction(txid, expectedAmount, telegramId) {
    const apiUrl = `https://toncenter.com/api/v2/getTransactions?address=${ton.publicAddress}&limit=50`;

    try {
        const response = await axios.get(apiUrl);
        const transactions = response.data.result;

        if (!transactions || transactions.length === 0) {
            console.log("‚ùå No se encontraron transacciones en TonCenter.");
            return false;
        }

        console.log("üìå Verificando transacci√≥n...");
        console.log("üîπ TXID ingresado:", txid);
        console.log("üîπ √öltimas 50 transacciones:", transactions);

        // üîç Buscar la transacci√≥n correcta
        const validTransaction = transactions.find(tx => {
            const txHash = tx.transaction_id?.hash || tx.hash; // ‚úÖ Usamos tx.hash si transaction_id no existe
            const txDestination = tx.in_msg?.destination?.account_address;
            const txAmount = parseFloat(tx.in_msg?.value) / 1e9;

            return (
                txHash === txid && // Comparar TXID
                txAmount === parseFloat(expectedAmount) && // Comparar monto en TON
                txDestination === ton.publicAddress // Comparar direcci√≥n destino
            );
        });

        if (validTransaction) {
            console.log("‚úÖ Transacci√≥n v√°lida encontrada:", validTransaction);
            return true;
        } else {
            console.log("‚ùå No se encontr√≥ una transacci√≥n v√°lida con este TXID.");
            return false;
        }
    } catch (error) {
        console.error("‚ùå Error verificando transacci√≥n TON:", error.response?.data || error.message);
        return false;
    }
}

module.exports = { verifyTONTransaction };
